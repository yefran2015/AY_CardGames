package poker;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.*;

import javax.swing.ImageIcon;

/**
 *
 * @author andrus
 */

public class PokerUI extends javax.swing.JFrame {
	Poker game;
	//For Linux:::?????????????????::::
//		private final static String cardImageBackSidePath = "H:/Study_College/MetropolitanStateUniversity/ICS_141_01_Programming_with_Objects/workspace/PokerGUIFinal/src/cardPictures/150/back-blue-150-1.png";
//		private final static String dirPath = "H:/Study_College/MetropolitanStateUniversity/ICS_141_01_Programming_with_Objects/workspace/PokerGUIFinal/src/cardPictures/150/";
//		private final static String logo="H:/Study_College/MetropolitanStateUniversity/ICS_141_01_Programming_with_Objects/workspace/PokerGUIFinal/src/logo/pictureGalleryIcon.jpg";
//		
//	private final static String cardImageBackSidePath = "H://Study_College//MetropolitanStateUniversity//ICS_141_01_Programming_with_Objects//workspace//PokerGUIFinal//src//cardPictures//150//back-blue-150-1.png";
//	private final static String dirPath = "H://Study_College//MetropolitanStateUniversity//ICS_141_01_Programming_with_Objects//workspace//PokerGUIFinal//src//cardPictures//150//";
//	private final static String logo="H://Study_College//MetropolitanStateUniversity//ICS_141_01_Programming_with_Objects//workspace//PokerGUIFinal//src//logo//pictureGalleryIcon.jpg";
	
	//For Windows:::::
	private final static String cardImageBackSidePath = "C:\\Users\\andrus\\Documents\\Study_College\\MetropolitanStateUniversity\\ICS_141_01_Programming_with_Objects\\workspace\\PokerGUIFinal\\src\\cardPictures\\150\\back-blue-150-1.png";
	private final static String dirPath = "C:\\Users\\andrus\\Documents\\Study_College\\MetropolitanStateUniversity\\ICS_141_01_Programming_with_Objects\\workspace\\PokerGUIFinal\\src\\cardPictures\\150\\";
	private final static String logo="C:\\Users\\andrus\\Documents\\Study_College\\MetropolitanStateUniversity\\ICS_141_01_Programming_with_Objects\\workspace\\PokerGUIFinal\\src\\logo\\pictureGalleryIcon.jpg";
	private final static String pictureType=".png";
	private final static String savesFile="saves.txt";
	private static final long serialVersionUID = 1L;
	private final static String about="About: This is Third version of Poker\nAuthor: andrus\nVersion: 0.3\nMade Date: 3/29/2012";
	private int countOfTenTurns = 0;
	private boolean bitRaised = false;
	private final static String title= "Poker Game v3";
	private double goldenRestitution=0;
	/** Creates new form PokerUI */	
    public PokerUI() {
        initComponents();       
    }

    public void copyGameReferenceToSecondVariable(Poker game){
    	this.game=game;
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     * @return 
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        mainScreen = new javax.swing.JPanel();
        card1Img = new javax.swing.JLabel();
        card2Img = new javax.swing.JLabel();
        card3Img = new javax.swing.JLabel();
        card4Img = new javax.swing.JLabel();
        card5Img = new javax.swing.JLabel();
        winningMessageLabel = new javax.swing.JLabel();
        scoreScreen = new javax.swing.JPanel();
        deckSizeLbl = new javax.swing.JLabel();
        moneyAmountlbl = new javax.swing.JLabel();
        lastWinningAmountlbl = new javax.swing.JLabel();
      lastWinningAmountlbl.setForeground(Color.MAGENTA);
        bitAmountlbl = new javax.swing.JLabel();
        infoPanel = new javax.swing.JPanel();
        rulesPanel = new javax.swing.JPanel();
        rulelbl1 = new javax.swing.JLabel();
        rulelbl2 = new javax.swing.JLabel();
        rulelbl3 = new javax.swing.JLabel();
        rulelbl4 = new javax.swing.JLabel();
        rulelbl5 = new javax.swing.JLabel();
        rulelbl6 = new javax.swing.JLabel();
        rulelbl7 = new javax.swing.JLabel();
        rulelbl8 = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        hold1 = new javax.swing.JButton();
        hold2 = new javax.swing.JButton();
        hold3 = new javax.swing.JButton();
        hold4 = new javax.swing.JButton();
        hold5 = new javax.swing.JButton();
        moreMoney = new javax.swing.JButton();
        lessMoney = new javax.swing.JButton();
        go = new javax.swing.JButton();
        newGame = new javax.swing.JButton();
        newDeck = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileNewGame = new javax.swing.JMenuItem();
        menuFileOpenSavedGame = new javax.swing.JMenuItem();
        menuFileSaveGame = new javax.swing.JMenuItem();
        menuFileLoadDefaultGame = new javax.swing.JMenuItem();
        menuFileEndGame = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuFileExit = new javax.swing.JMenuItem();
        menuSettings = new javax.swing.JMenu();
        menuSettingsOption = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuHelpAbout = new javax.swing.JMenuItem();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        mainScreen.setBorder(new javax.swing.border.MatteBorder(null));
        setMinimumSize(new java.awt.Dimension(1080, 655));
        //setResizable(false);
        setTitle(title);
        
        // Get the default toolkit
        Toolkit toolkit = Toolkit.getDefaultToolkit();

		// Get the current screen size
		Dimension scrnsize = toolkit.getScreenSize();

		// Check if screen resolution higher than 
		// Poker window and if then centralize the 
		// game window
		if(scrnsize.getHeight()>655&&scrnsize.getWidth()>1075){
			setLocationRelativeTo(null);				
		}

        card1Img.setIcon(new javax.swing.ImageIcon(cardImageBackSidePath));
        
        card2Img.setIcon(new javax.swing.ImageIcon(cardImageBackSidePath)); // NOI18N

        card3Img.setIcon(new javax.swing.ImageIcon(cardImageBackSidePath)); // NOI18N

        card4Img.setIcon(new javax.swing.ImageIcon(cardImageBackSidePath)); // NOI18N

        card5Img.setIcon(new javax.swing.ImageIcon(cardImageBackSidePath)); // NOI18N

        winningMessageLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        winningMessageLabel.setForeground(new java.awt.Color(51, 51, 255));
        winningMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winningMessageLabel.setText("How Many Hands?");
        winningMessageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        winningMessageLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout mainScreenLayout = new javax.swing.GroupLayout(mainScreen);
        mainScreen.setLayout(mainScreenLayout);
        mainScreenLayout.setHorizontalGroup(
            mainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(winningMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                    .addGroup(mainScreenLayout.createSequentialGroup()
                        .addComponent(card1Img)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card2Img)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card3Img)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card4Img)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card5Img)))
                .addContainerGap())
        );
        mainScreenLayout.setVerticalGroup(
            mainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(winningMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(mainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(card1Img)
                    .addComponent(card5Img)
                    .addComponent(card4Img)
                    .addComponent(card2Img)
                    .addComponent(card3Img))
                .addGap(34, 34, 34))
        );

        scoreScreen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        deckSizeLbl.setText("now in deck");
        rulesPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 255)));
        rulelbl8.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        rulelbl8.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout rulesPanelLayout = new javax.swing.GroupLayout(rulesPanel);
        rulesPanel.setLayout(rulesPanelLayout);
        rulesPanelLayout.setHorizontalGroup(
            rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rulelbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulelbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulelbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulelbl4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulelbl5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulelbl6, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulelbl7, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rulelbl8, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        rulesPanelLayout.setVerticalGroup(
            rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rulelbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rulelbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rulelbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rulelbl4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rulelbl5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rulelbl6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rulelbl7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rulelbl8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
        		infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(infoPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(infoPanelLayout.createSequentialGroup()
                            .addComponent(lastWinningAmountlbl)
                            .addContainerGap())
                        .addGroup(infoPanelLayout.createSequentialGroup()
                            .addComponent(bitAmountlbl)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(moneyAmountlbl)))
            );
        infoPanelLayout.setVerticalGroup(
        		infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addGroup(infoPanelLayout.createSequentialGroup()
                    .addComponent(lastWinningAmountlbl)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGap(0, 0, 20)
                    .addComponent(bitAmountlbl)
                    .addGap(1, 1, 10)
                    .addGap(0, 0, 10)
                    .addComponent(moneyAmountlbl)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
        
        
        
        javax.swing.GroupLayout scoreScreenLayout = new javax.swing.GroupLayout(scoreScreen);
        scoreScreen.setLayout(scoreScreenLayout);
        scoreScreenLayout.setHorizontalGroup(
            scoreScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreScreenLayout.createSequentialGroup()
                .addContainerGap()
                
                .addComponent(rulesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                
                .addContainerGap(18, Short.MAX_VALUE))
             .addGroup(scoreScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        
        
        
        
        
        
        scoreScreenLayout.setVerticalGroup(
            scoreScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreScreenLayout.createSequentialGroup()
                .addContainerGap()
                
                .addComponent(rulesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                
                .addContainerGap(92, Short.MAX_VALUE))
                 .addGroup(scoreScreenLayout.createSequentialGroup()
                .addGap(331, 331, 331)
                .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );

        buttonsPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        hold1.setText("CHANGE 1");
        hold1.setMnemonic('1');
        hold1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hold1ActionPerformed(evt);
            }
        });

        hold2.setText("CHANGE 2");
        hold2.setMnemonic('2');
        hold2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hold2ActionPerformed(evt);
            }
        });

        hold3.setText("CHANGE 3");
        hold3.setMnemonic('3');
        hold3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hold3ActionPerformed(evt);
            }
        });

        hold4.setText("CHANGE 4");
        hold4.setMnemonic('4');
        hold4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hold4ActionPerformed(evt);
            }
        });

        hold5.setText("CHANGE 5");
        hold5.setMnemonic('5');
        hold5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hold5ActionPerformed(evt);
            }
        });

        moreMoney.setText("BIT");
        moreMoney.setMnemonic('B');
        moreMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreMoneyActionPerformed(evt);
                bitRaised=true;
            }
        });
        MouseListener popupListener = new ButtonMouseListener(); 
        moreMoney.addMouseListener(popupListener);

        lessMoney.setText("Get Back Bit");
        lessMoney.setMnemonic('i');
        lessMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lessMoneyActionPerformed(evt);
                bitRaised=true;
            }
        });

        newGame.setVisible(false);
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	newGameActionPerformed(evt);
            }
        });
        
        go.setText("Serf"); 
        go.setMnemonic('e');
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	goActionPerformed(evt);
            }
        });
        
        newGame.setText("New Hand");
        newGame.setMnemonic('w');
        
        newDeck.setText("Open New Card Deck");
        newDeck.setMnemonic('k');
        newDeck.setForeground(new java.awt.Color(51, 51, 255));
        newDeck.setVisible(false);
        newDeck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	newDeckActionPerformed(evt);
            }
        });
        
        
        rulelbl1.setText("Pair :  1X1");
        rulelbl2.setText("2 Pairs : 1X1.5");
        rulelbl3.setText("Three of Kind : 1X3");
        rulelbl4.setText("Straight : 1X5");
        rulelbl5.setText("Flash : 1X7");
        rulelbl6.setText("Full House : 1X25");
        rulelbl7.setText("Four of Kind : 1X150");
        rulelbl8.setText("Straight Flush : 1X1000");
        
        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hold1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(hold2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(hold3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(hold4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(hold5, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                	.addComponent(newDeck, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(go, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newGame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                        .addComponent(moreMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lessMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lessMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moreMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hold1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hold3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hold2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hold4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hold5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newDeck, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(go, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(newGame, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuFile.setText("File");
        menuFile.setMnemonic('F');

        menuFileNewGame.setText("New Game");
        menuFileNewGame.setMnemonic('N');
        menuFileNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileNewGameActionPerformed(evt);
            }
        });
        menuFile.add(menuFileNewGame);

        menuFileOpenSavedGame.setText("Open Game");
        menuFileOpenSavedGame.setMnemonic('O');
        menuFile.add(menuFileOpenSavedGame);

        menuFileSaveGame.setText("Save Game");
        menuFileSaveGame.setMnemonic('v');
        menuFileSaveGame.addActionListener (new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt){
                try {
					menuFileSaveGameActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        menuFile.add(menuFileSaveGame);
        
        
        menuFileEndGame.setText("End Game");
        menuFileEndGame.setMnemonic('D');
        menuFile.add(menuFileEndGame);
        menuFile.add(jSeparator1);

        menuFileExit.setText("Exit");
        menuFileExit.setMnemonic('x');
        menuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileExitActionPerformed(evt);
            }
        });
        menuFile.add(menuFileExit);

        menuBar.add(menuFile);

        menuSettings.setText("Settings");
        menuSettings.setMnemonic('S');
        

        menuSettingsOption.setText("Options");
        menuSettingsOption.setMnemonic('p');
        menuSettings.add(menuSettingsOption);
        
        menuFileLoadDefaultGame.setText("Reset Gold");
        menuFileLoadDefaultGame.setMnemonic('R');
        menuFileLoadDefaultGame.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(ActionEvent arg0) {
				game.setMoneyAmount(100);
				game.setBitAmount(1);
				game.setLastWinningAmount(0);
				setInfoPanelMessages();
			}
        });
        menuSettings.add(menuFileLoadDefaultGame);
        
        menuBar.add(menuSettings);

        menuHelp.setText("Help");
        menuHelp.setMnemonic('H');

        menuHelpAbout.setText("About");
        menuHelpAbout.setMnemonic('A');
        menuHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHelpAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuHelpAbout);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(buttonsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(mainScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scoreScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scoreScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    public void CloseWindow(){
    	
    }
    public void setInfoPanelMessages(){
        moneyAmountlbl.setText("You have: "+game.getMoneyAmount()+"$");
        moneyAmountlbl.setFont(new Font("Tahoma",1,15));
        bitAmountlbl.setText("Your Bit: "+game.getBitAmount()+"$");
        bitAmountlbl.setFont(new Font("Tahoma", 1, 11));
        lastWinningAmountlbl.setText("Last Winning: "+game.getLastWinningAmount()+"$");
        lastWinningAmountlbl.setFont(new Font("Tahoma",Font.PLAIN,15));
        rulelbl1.setText("Pair :"+game.getBitAmount()+"X1: "+game.getBitAmount()*1);
        rulelbl2.setText("2 Pairs :"+game.getBitAmount()+"X1.5: "+game.getBitAmount()*1.5);
        rulelbl3.setText("Three of Kind :"+game.getBitAmount()+"X3: "+game.getBitAmount()*3);
        rulelbl4.setText("Straight :"+game.getBitAmount()+"X5: "+game.getBitAmount()*5);
        rulelbl5.setText("Flash :"+game.getBitAmount()+"X7: "+game.getBitAmount()*7);
        rulelbl6.setText("Full House :"+game.getBitAmount()+"X25: "+game.getBitAmount()*25);
        rulelbl7.setText("Four of Kind :"+game.getBitAmount()+"X150: "+game.getBitAmount()*150);
        rulelbl8.setText("Straight Flush :"+game.getBitAmount()+"X1000: "+game.getBitAmount()*1000);
    }
    class ButtonMouseListener extends MouseAdapter {
    	public void mousePressed(MouseEvent e) {
    		System.out.println("fjkda;l");
    		maybeShowPopup(e);
    	}

    	public void mouseReleased(MouseEvent e) {
    		maybeShowPopup(e);
    	}

    	private void maybeShowPopup(MouseEvent e) {
    	if (e.isPopupTrigger()) {

    	}
    	}}
    
    private void menuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
    	System.exit(0);
    }//GEN-LAST:event_menuFileExitActionPerformed
    
    private void menuFileNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
    	newGameActionPerformed(null);
    }
    
    
    private void menuFileSaveGameActionPerformed(java.awt.event.ActionEvent evt) throws Exception{
   
    	DataOutputStream output = new DataOutputStream(new FileOutputStream(savesFile));
		output.writeUTF(game.getPlayerName());
		output.writeDouble(game.getMoneyAmount());
		output.writeInt(game.getBitAmount());
		output.close();
			
    		
    }
    
    private void menuHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
    	String stringMessage=about;
    	//javax.swing.JOptionPane.showMessageDialog(null, stringMessage);
    	javax.swing.JOptionPane.showMessageDialog(null,stringMessage,"About",javax.swing.JOptionPane.INFORMATION_MESSAGE,new ImageIcon(logo));
    }
    /**
     * 
     * THis method is handler hold not hold buttons activity
     * @param holdNum
     */
    public void buttonsActionsHandler(int holdNum){
    	if(holdCounter[holdNum-1]==false){
    		setIconImages(cardImageBackSidePath,holdNum);
    	}else{
    		String tmp=dirPath+game.hands[0][holdNum-1]+pictureType;
    		setIconImages(tmp,holdNum);		
    		}
    	holdCounter[holdNum-1]=!holdCounter[holdNum-1];
    }
   
    private boolean[] holdCounter ={false,false,false,false,false};//this counter for all 5 buttons for hold / not hold
     
    private void hold1ActionPerformed(java.awt.event.ActionEvent evt) {
    	game.holds[0]=!(game.holds[0]);
    	buttonsActionsHandler(1);
    }
    
    private void hold2ActionPerformed(java.awt.event.ActionEvent evt) {
    	game.holds[1]=!(game.holds[1]);
    	buttonsActionsHandler(2);
    }

    private void hold3ActionPerformed(java.awt.event.ActionEvent evt) {
    	game.holds[2]=!(game.holds[2]);	
    	buttonsActionsHandler(3);
    }
    private void hold4ActionPerformed(java.awt.event.ActionEvent evt) {
    	game.holds[3]=!(game.holds[3]);
    	buttonsActionsHandler(4);
    }
    private void hold5ActionPerformed(java.awt.event.ActionEvent evt) {
    	game.holds[4]=!(game.holds[4]);
    	buttonsActionsHandler(5);
    }
    private void moreMoneyActionPerformed(java.awt.event.ActionEvent evt) { 	
    	game.setBitAmount(game.getBitAmount()+1);
    	game.setMoneyAmount(game.getMoneyAmount()-1);
    	setInfoPanelMessages();
    }
    private void lessMoneyActionPerformed(java.awt.event.ActionEvent evt) {
    	if(game.getMinAlloudAmount()<game.getBitAmount()){
    		game.setBitAmount(game.getBitAmount()-1);
    		game.setMoneyAmount(game.getMoneyAmount()+1);
    		setInfoPanelMessages();
    	}
    }
    
    public void goActionPerformed(java.awt.event.ActionEvent evt) {
    	if(bitRaised==true){//disabling + - buttons for 10 turns
    		bitRaised=false;
    		countOfTenTurns=10;
    		game.setMinAlloudAmount(game.getBitAmount());
    		lessMoney.setEnabled(false);
    		moreMoney.setEnabled(false);
    	}
    	game.dispenseCards();//
		game.dispenseHands();
		setWinningMessage(game.getWinnings());//this is winning message	
		setDeckSizeToLabel(game.getDeckSize());
		go.setVisible(false);
		newGame.setVisible(true);
		turnOfHoldButtons();
		game.setMoneyAmount(game.getMoneyAmount()+game.getLastWinningAmount());
		if(countOfTenTurns>0)
			countOfTenTurns--;
		else{
			goldenRestitution=(double)game.getMinAlloudAmount()-goldenRestitution*.00001;
			game.setMinAlloudAmount((int)goldenRestitution);
			lessMoney.setEnabled(true);
    		moreMoney.setEnabled(true);
		}
			
    }
    public void turnOnHoldButtons(){
    	hold1.setVisible(true);
    	hold2.setVisible(true);
    	hold3.setVisible(true);
    	hold4.setVisible(true);
    	hold5.setVisible(true);
    }
    public void turnOfHoldButtons(){
    	hold1.setVisible(false);
    	hold2.setVisible(false);
    	hold3.setVisible(false);
    	hold4.setVisible(false);
    	hold5.setVisible(false);
    }
    public void newGameActionPerformed(java.awt.event.ActionEvent evt) {
    	if(countOfTenTurns==0){
    		bitRaised=false;
    	}
    	if(game.getDeckSize()<10){
    		setWinningMessage("Deck out of Cards!!!");
    		newDeck.setVisible(true);
    		newGame.setVisible(false);
    	}else{
    		game.setMoneyAmount(game.getMoneyAmount()-game.getBitAmount());
    		setInfoPanelMessages();
    		turnOnHoldButtons();
    		game.clearHoldsArray();
    		setWinningMessage("Choose Cards To Change");
    		go.setVisible(true);
    		newGame.setVisible(false);
    		game.dispenseCards();//	
    		setDeckSizeToLabel(game.getDeckSize());
    		game.dispenseHands();
    		for(int i=0;i<game.holds.length;i++){
    			game.holds[i]=false;
    		}
    		for(int i=0;i<holdCounter.length;i++){
    			holdCounter[i]=false;
    		}
		}

    }
    public void newDeckActionPerformed(java.awt.event.ActionEvent evt) {
    	game.deckOf52Cards();
    	game.resetDeckSize();
    	newGameActionPerformed(null);
    	go.setVisible(true);
    	newDeck.setVisible(false);
    }   
    public void setIconImages(String string,int cardImgNumber) {
    	switch(cardImgNumber){
			case 1:card1Img.setIcon(new javax.swing.ImageIcon(string));break;
			case 2:card2Img.setIcon(new javax.swing.ImageIcon(string));break;
			case 3:card3Img.setIcon(new javax.swing.ImageIcon(string));break;
			case 4:card4Img.setIcon(new javax.swing.ImageIcon(string));break;
			case 5:card5Img.setIcon(new javax.swing.ImageIcon(string));break;
			default :;
    	}
    } 
    public void setWinningMessage(String winMessage){
    	winningMessageLabel.setText(winMessage);
    }

    public void setDeckSizeToLabel(int deckSize){
    	String tmp=""+deckSize;
    	deckSizeLbl.setText(tmp);    	
    }
    public void run() {
       this.setVisible(true);
    }
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JLabel card1Img;
    private javax.swing.JLabel card2Img;
    private javax.swing.JLabel card3Img;
    private javax.swing.JLabel card4Img;
    private javax.swing.JLabel card5Img;
    private javax.swing.JLabel deckSizeLbl;
    private javax.swing.JButton newGame;
    private javax.swing.JButton go;
    private javax.swing.JButton newDeck;
    private javax.swing.JButton hold1;
    private javax.swing.JButton hold2;
    private javax.swing.JButton hold3;
    private javax.swing.JButton hold4;
    private javax.swing.JButton hold5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton lessMoney;
    private javax.swing.JPanel mainScreen;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileEndGame;
    private javax.swing.JMenuItem menuFileExit;
    private javax.swing.JMenuItem menuFileNewGame;
    private javax.swing.JMenuItem menuFileOpenSavedGame;
    private javax.swing.JMenuItem menuFileSaveGame;
    private javax.swing.JMenuItem menuFileLoadDefaultGame;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuHelpAbout;
    private javax.swing.JMenu menuSettings;
    private javax.swing.JMenuItem menuSettingsOption;
    private javax.swing.JButton moreMoney;
    private javax.swing.JPanel scoreScreen;
    private javax.swing.JLabel winningMessageLabel;   
    private javax.swing.JLabel rulelbl1;
    private javax.swing.JLabel rulelbl2;
    private javax.swing.JLabel rulelbl3;
    private javax.swing.JLabel rulelbl4;
    private javax.swing.JLabel rulelbl5;
    private javax.swing.JLabel rulelbl6;
    private javax.swing.JLabel rulelbl7;
    private javax.swing.JLabel rulelbl8;
    private javax.swing.JPanel rulesPanel;   
    private javax.swing.JLabel moneyAmountlbl;
    private javax.swing.JLabel lastWinningAmountlbl;
    private javax.swing.JLabel bitAmountlbl;
    private javax.swing.JPanel infoPanel;
    // End of variables declaration//GEN-END:variables

}
